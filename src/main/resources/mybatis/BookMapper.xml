<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.booksystem.mapper.BookMapper">
    <select id="getBookList" resultType="Book">
        select * from book
        where
            book_title like concat('%', #{data}, '%')
        or
            book_author like concat('%', #{data}, '%')
        limit #{start}, #{size}
    </select>

    <select id="getCount">
        select count(*) as total from book
        where
        book_title like concat('%', #{data}, '%')
        or
        book_author like concat('%', #{data}, '%')
    </select>

    <select id="getBook" resultType="Book">
        select * from book
        where
        book_id = #{bookId}
    </select>
<!--    resultMap的属性配置得按照constructor、id、result、association、collection、discriminator的顺序。-->
    <resultMap id="findBookWithShelfStatusMap" type="com.example.booksystem.core.entity.BookWithShelfStatus">

        <result property="addedToShelf" column="added_to_shelf"/>

        <association property="book" javaType="com.example.booksystem.core.entity.Book">
            <id property="bookId" column="book_id"/>
            <result property="bookTitle" column="book_title"/>
            <result property="bookAuthor" column="book_author"/>
            <result property="bookContent" column="book_content"/>
            <result property="bookIntro" column="book_intro"/>
            <result property="bookCover" column="book_cover"/>
        </association>
    </resultMap>

    <select id="findBookWithShelfStatus" resultMap="findBookWithShelfStatusMap">
        select b.*,
            case
                when ub.uid is null
                then 0
                else 1
            end as added_to_shelf
        from book as b
        left join user_book as ub
        on b.book_id = ub.book_id and ub.uid = #{uid}
        where b.book_id = #{bookId}
    </select>

    <update id="updateBook" parameterType="Book">
        update book set
            book_title = #{book.bookTitle},
            book_author = #{book.bookAuthor},
            book_cover = #{book.bookCover},
            book_content = #{book.bookContent},
            book_intro = #{book.bookIntro}
        where book_id = #{book.bookId}
    </update>

    <delete id="deleteBook">
        delete from book
        where book_id = #{bookId}
    </delete>

    <select id="findBookAuthorByName">
        select author_name
        from author
        where author_name = #{authorName}
    </select>

    <select id="findBookByTitleAndAuthor">
        select book_id
        from book
        where book_author = #{authorName} and book_title = #{bookName}
    </select>

    <insert id="addAuthor">
        insert into author(author_name)
        values(#{authorName})
    </insert>

    <insert id="addBook">
        insert into book(book_title, book_author, book_content, book_intro, book_cover)
        values(#{book.bookTitle}, #{book.bookAuthor}, #{book.bookContent}, #{book.bookIntro}, #{book.bookCover})
    </insert>
    
</mapper>